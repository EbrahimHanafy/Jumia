@model List<ShoppingCartProductViewModel>

<div class="container my-5" style="margin-bottom 20px">
    <h2 class="text-center mb-4">Shopping Cart</h2>
    @if (Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">Image</th>
                        <th scope="col">Product Name</th>
                        <th scope="col">Unit Price</th>
                        <th scope="col">Discount Percentage</th>
                        <th scope="col">Color & Size</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Total</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                @{
                    double grandTotal = 0; // Variable to accumulate total price
                }
                @foreach (var item in Model)
                {
                    double itemTotal = 0.0;
                    if (item.product.Discount != 0 && item.product.DiscountPersentage !=0)
                    {
                        itemTotal = Convert.ToDouble((item.product.Price - item.product.Discount) * item.shoppingCart.Quantity); 
                    }
                    else
                    {
                        itemTotal = item.product.Price * item.shoppingCart.Quantity;
                    }
                     // Calculate product total
                    grandTotal += itemTotal; // Add to the grand total
                    <tr>
                        <td class="align-middle">
                            <img src="@Url.Content(item.image.ProductImageUrl)" class="img-fluid cart-image" alt="@item.image.ProductImageUrl" style="max-width: 100px;">
                        </td>
                        <td class="align-middle">@item.product.ProductName</td>
                        <td class="align-middle">@item.product.Price Pound</td>
                        <td class="align-middle">@item.product.DiscountPersentage %</td>
                        <td class="align-middle" style="color:@item.color.ColorName">@item.color.ColorName : @item.size.SizeName </td>
                        <td class="align-middle">@item.shoppingCart.Quantity Pieces
                           @*  <input type="number" class="form-control text-center" value="@item.shoppingCart.Quantity" min="1"> *@
                        </td>
                        <td class="align-middle text-primary"> @(itemTotal)  Pound</td>
                        <td class="align-middle">
                                <form asp-action="RemoveProductFromCart" asp-controller="ShoppingCart" method="post" onsubmit="confirmRemoving(event)">
                                <input type="hidden" name="shoppingCartId" value="@item.shoppingCart.ShoppingCartId" />
                                <button type="submit" class="btn btn-danger">Remove</button>
                            </form>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="row">
            <div class="col-md-12 text-center">
            <h4 title="Total" class="text-primary">Total: @grandTotal Pound</h4>
                <a href="/checkout" class="btn btn-success mt-3">Proceed to Checkout</a>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center">
            Your cart is empty. <a asp-action="Index" asp-controller="Home" class="alert-link">Start shopping now!</a>
        </div>
    }
</div>
<script>
    // Function to show a SweetAlert confirmation before removing an item from the cart
    function confirmRemoving(event) {
        event.preventDefault(); // Prevent the form from submitting immediately

        Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to remove this product from your cart?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                // If confirmed, submit the form
                event.target.submit();
            }
        });

        // Return false to prevent the form submission until user confirmation
        return false;
    }
</script>
